{"version":3,"sources":["components/Main.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Main","data","name","id","src","weather","icon","alt","main","temp","sys","country","description","className","temp_min","temp_max","feels_like","Form","props","onSubmit","type","value","onChange","placeholder","App","state","currentCity","searchTerm","handleSearchTerm","e","setState","target","handleSubmit","preventDefault","fetchData","fetch","mode","res","json","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA6CeA,G,MA3CF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OAAIA,EAAKC,KAEL,oCACE,0BAASC,GAAG,OAAZ,UACE,qBACEC,IAAG,2CAAsCH,EAAKI,QAAQ,GAAGC,KAAtD,WACHC,IAAI,KAEN,+BAAKN,EAAKO,KAAKC,KAAf,WACA,+BACGR,EAAKC,KADR,KACgBD,EAAKS,IAAIC,WAEzB,6BAAKV,EAAKI,QAAQ,GAAGO,iBAEvB,0BAAST,GAAG,cAAZ,UACE,6CACA,sBAAKU,UAAU,mBAAf,UACE,gCACE,qCACA,4BAAIZ,EAAKO,KAAKM,cAEhB,gCACE,qCACA,4BAAIb,EAAKO,KAAKO,cAGhB,gCACE,4CACA,4BAAId,EAAKO,KAAKQ,yBAQtB,kCACE,8DC1BOC,EAdF,SAACC,GACZ,OACE,sBAAMC,SAAUD,EAAMC,SAAtB,SACE,uBACEhB,GAAG,OACHiB,KAAK,OACLC,MAAOH,EAAMG,MACbC,SAAUJ,EAAMI,SAChBC,YAAY,yCC+BLC,E,4MAlCbC,MAAQ,CAAEC,YAAa,SAAUC,WAAY,I,EAe7CC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAACH,WAAYE,EAAEE,OAAOV,S,EAGtCW,aAAe,SAAAH,GACbA,EAAEI,iBACF,EAAKH,SAAS,CAACJ,YAAa,EAAKD,MAAME,aACvC,EAAKO,UAAU,EAAKT,MAAME,a,iGAnBZD,G,+EAEE,mC,SACIS,MAAM,qDAAD,OAAsDT,EAAtD,+BADT,oCAC0G,CAACU,KAAM,S,cAAzHC,E,gBACaA,EAAIC,O,OAAjBrC,E,OACNsC,KAAKT,SAAS,CAAC7B,KAAMA,I,2PAIvBsC,KAAKL,UAAUK,KAAKd,MAAMC,a,qIAa1B,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,CAAMS,SAAUiB,KAAKX,iBAAkBP,MAAOkB,KAAKd,MAAME,WAAYR,SAAUoB,KAAKP,eACpFO,KAAKd,MAAMxB,MAAQ,cAAC,EAAD,CAAMA,KAAMsC,KAAKd,MAAMxB,c,GA7BhCuC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.28071781.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst Main = ({ data }) => {\n  if (data.name) {\n    return (\n      <article>\n        <section id=\"main\">\n          <img\n            src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@4x.png`}\n            alt=\"\"\n          />\n          <h1>{data.main.temp}ÂºC</h1>\n          <h2>\n            {data.name}, {data.sys.country}\n          </h2>\n          <h4>{data.weather[0].description}</h4>\n        </section>\n        <section id=\"temperature\">\n          <h3>Temperature</h3>\n          <div className=\"temperature-info\">\n            <div>\n              <h4>Min</h4>\n              <p>{data.main.temp_min}</p>\n            </div>\n            <div>\n              <h4>Max</h4>\n              <p>{data.main.temp_max}</p>\n            </div>\n\n            <div>\n              <h4>Feels like</h4>\n              <p>{data.main.feels_like}</p>\n            </div>\n          </div>\n        </section>\n      </article>\n    );\n  } else\n    return (\n      <article>\n        <p>Please enter a valid city</p>\n      </article>\n    );\n};\n\nexport default Main;\n","const Form = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <input\n        id=\"form\"\n        type=\"text\"\n        value={props.value}\n        onChange={props.onChange}\n        placeholder=\"Search for a city and press enter\"\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Main from './components/Main';\nimport Form from './components/Form';\nclass App extends Component {\n  state = { currentCity: 'campos', searchTerm: '',}\n\n\n  async fetchData(currentCity) {\n\n      const myKey = '52d0c91c2edcba6691baa415df78b966';\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${currentCity}&units=metric&appid=${myKey}`, {mode: 'cors'})\n      const data = await res.json();\n      this.setState({data: data})\n  }\n\n  async componentDidMount() {\n    this.fetchData(this.state.currentCity);\n  }\n\n  handleSearchTerm = (e) => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({currentCity: this.state.searchTerm});\n    this.fetchData(this.state.searchTerm)\n  }\n  render() { \n    return (\n      <div className=\"App\">\n        <Form onChange={this.handleSearchTerm} value={this.state.searchTerm} onSubmit={this.handleSubmit}/>\n       {this.state.data && <Main data={this.state.data}/>}\n      </div>\n    );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}